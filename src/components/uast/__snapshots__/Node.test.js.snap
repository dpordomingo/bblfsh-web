// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Children renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.hbfmnM {
  min-height: 29px;
  cursor: pointer;
}

.hbfmnM::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.hbfmnM::before {
  content: '+';
  color: #EB7422;
}

.hbfmnM:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.bUwxHt {
  display: none;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.HnGWi {
  color: #F2A83F;
}

.HnGWi::before {
  content: '\\27';
}

.HnGWi::after {
  content: '\\27';
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={undefined}
>
  <div
    className="sc-htpNat ghHrsA"
    onClick={[Function]}
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      children
    </span>
    <summary
      className="sc-ifAKCX gaIEnP"
    >
      []Node
    </summary>
  </div>
  <div
    className="sc-bxivhb dJnrFt"
  >
    <div
      className="sc-bdVaJa jQbgOF"
      onMouseMove={[Function]}
    >
      <div
        className="sc-htpNat hbfmnM"
        onClick={[Function]}
      >
        <summary
          className="sc-ifAKCX gaIEnP"
        >
          Node
        </summary>
      </div>
      <div
        className="sc-bxivhb bUwxHt"
      >
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              internal_type
            </span>
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              foo
            </span>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
          onMouseMove={undefined}
        >
          <div
            className="sc-htpNat ghHrsA"
            onClick={[Function]}
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              roles
            </span>
            <summary
              className="sc-ifAKCX gaIEnP"
            >
              []Role
            </summary>
          </div>
          <div
            className="sc-bxivhb dJnrFt"
          >
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  a
                </span>
              </div>
            </div>
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  b
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
      onMouseMove={[Function]}
    >
      <div
        className="sc-htpNat hbfmnM"
        onClick={[Function]}
      >
        <summary
          className="sc-ifAKCX gaIEnP"
        >
          Node
        </summary>
      </div>
      <div
        className="sc-bxivhb bUwxHt"
      >
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              internal_type
            </span>
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              bar
            </span>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
          onMouseMove={undefined}
        >
          <div
            className="sc-htpNat ghHrsA"
            onClick={[Function]}
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              roles
            </span>
            <summary
              className="sc-ifAKCX gaIEnP"
            >
              []Role
            </summary>
          </div>
          <div
            className="sc-bxivhb dJnrFt"
          >
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  a
                </span>
              </div>
            </div>
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  c
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`CollapsibleItem renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={undefined}
>
  <div
    className="sc-htpNat ghHrsA"
    onClick={[Function]}
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      foo
    </span>
    <summary
      className="sc-ifAKCX gaIEnP"
    />
  </div>
  <div
    className="sc-bxivhb dJnrFt"
  >
    yada yada
  </div>
</div>
`;

exports[`Node renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.hbfmnM {
  min-height: 29px;
  cursor: pointer;
}

.hbfmnM::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.hbfmnM::before {
  content: '+';
  color: #EB7422;
}

.hbfmnM:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.bUwxHt {
  display: none;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.HnGWi {
  color: #F2A83F;
}

.HnGWi::before {
  content: '\\27';
}

.HnGWi::after {
  content: '\\27';
}

.cihuB {
  color: #212121;
}

.cihuB::before {
  content: ;
}

.cihuB::after {
  content: ;
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={[Function]}
>
  <div
    className="sc-htpNat hbfmnM"
    onClick={[Function]}
  >
    <summary
      className="sc-ifAKCX gaIEnP"
    >
      Node
    </summary>
  </div>
  <div
    className="sc-bxivhb bUwxHt"
  >
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          internal_type
        </span>
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          foo
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
      onMouseMove={undefined}
    >
      <div
        className="sc-htpNat ghHrsA"
        onClick={[Function]}
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          properties
        </span>
        <summary
          className="sc-ifAKCX gaIEnP"
        >
          map&lt;string, string&gt;
        </summary>
      </div>
      <div
        className="sc-bxivhb dJnrFt"
      >
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              a
            </span>
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              b
            </span>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              c
            </span>
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              d
            </span>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-bZQynM iOQEqP"
            >
              foo
            </span>
            <span
              className="sc-EHOje cihuB"
              type="boolean"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
      onMouseMove={undefined}
    >
      <div
        className="sc-htpNat ghHrsA"
        onClick={[Function]}
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          children
        </span>
        <summary
          className="sc-ifAKCX gaIEnP"
        >
          []Node
        </summary>
      </div>
      <div
        className="sc-bxivhb dJnrFt"
      >
        <div
          className="sc-bdVaJa jQbgOF"
          onMouseMove={[Function]}
        >
          <div
            className="sc-htpNat hbfmnM"
            onClick={[Function]}
          >
            <summary
              className="sc-ifAKCX gaIEnP"
            >
              Node
            </summary>
          </div>
          <div
            className="sc-bxivhb bUwxHt"
          >
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-bZQynM iOQEqP"
                >
                  internal_type
                </span>
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  foo
                </span>
              </div>
            </div>
            <div
              className="sc-bdVaJa jQbgOF"
              onMouseMove={undefined}
            >
              <div
                className="sc-htpNat ghHrsA"
                onClick={[Function]}
              >
                <span
                  className="sc-bZQynM iOQEqP"
                >
                  roles
                </span>
                <summary
                  className="sc-ifAKCX gaIEnP"
                >
                  []Role
                </summary>
              </div>
              <div
                className="sc-bxivhb dJnrFt"
              >
                <div
                  className="sc-bdVaJa jQbgOF"
                >
                  <div
                    className="sc-bwzfXH hRiJmB"
                  >
                    <span
                      className="sc-EHOje HnGWi"
                      type="string"
                    >
                      a
                    </span>
                  </div>
                </div>
                <div
                  className="sc-bdVaJa jQbgOF"
                >
                  <div
                    className="sc-bwzfXH hRiJmB"
                  >
                    <span
                      className="sc-EHOje HnGWi"
                      type="string"
                    >
                      b
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
          onMouseMove={[Function]}
        >
          <div
            className="sc-htpNat hbfmnM"
            onClick={[Function]}
          >
            <summary
              className="sc-ifAKCX gaIEnP"
            >
              Node
            </summary>
          </div>
          <div
            className="sc-bxivhb bUwxHt"
          >
            <div
              className="sc-bdVaJa jQbgOF"
            >
              <div
                className="sc-bwzfXH hRiJmB"
              >
                <span
                  className="sc-bZQynM iOQEqP"
                >
                  internal_type
                </span>
                <span
                  className="sc-EHOje HnGWi"
                  type="string"
                >
                  bar
                </span>
              </div>
            </div>
            <div
              className="sc-bdVaJa jQbgOF"
              onMouseMove={undefined}
            >
              <div
                className="sc-htpNat ghHrsA"
                onClick={[Function]}
              >
                <span
                  className="sc-bZQynM iOQEqP"
                >
                  roles
                </span>
                <summary
                  className="sc-ifAKCX gaIEnP"
                >
                  []Role
                </summary>
              </div>
              <div
                className="sc-bxivhb dJnrFt"
              >
                <div
                  className="sc-bdVaJa jQbgOF"
                >
                  <div
                    className="sc-bwzfXH hRiJmB"
                  >
                    <span
                      className="sc-EHOje HnGWi"
                      type="string"
                    >
                      a
                    </span>
                  </div>
                </div>
                <div
                  className="sc-bdVaJa jQbgOF"
                >
                  <div
                    className="sc-bwzfXH hRiJmB"
                  >
                    <span
                      className="sc-EHOje HnGWi"
                      type="string"
                    >
                      c
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          token
        </span>
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          bar
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
      onMouseMove={undefined}
    >
      <div
        className="sc-htpNat ghHrsA"
        onClick={[Function]}
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          roles
        </span>
        <summary
          className="sc-ifAKCX gaIEnP"
        >
          []Role
        </summary>
      </div>
      <div
        className="sc-bxivhb dJnrFt"
      >
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              e
            </span>
          </div>
        </div>
        <div
          className="sc-bdVaJa jQbgOF"
        >
          <div
            className="sc-bwzfXH hRiJmB"
          >
            <span
              className="sc-EHOje HnGWi"
              type="string"
            >
              g
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Position renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.eTqdey {
  color: #EB7422;
}

.eTqdey::before {
  content: ;
}

.eTqdey::after {
  content: ;
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={undefined}
>
  <div
    className="sc-htpNat ghHrsA"
    onClick={[Function]}
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      foo
    </span>
    <summary
      className="sc-ifAKCX gaIEnP"
    >
      Position
    </summary>
  </div>
  <div
    className="sc-bxivhb dJnrFt"
  >
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          offset
        </span>
        <span
          className="sc-EHOje eTqdey"
          type="number"
        >
          1
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          line
        </span>
        <span
          className="sc-EHOje eTqdey"
          type="number"
        >
          1
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          col
        </span>
        <span
          className="sc-EHOje eTqdey"
          type="number"
        >
          1
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Properties renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.HnGWi {
  color: #F2A83F;
}

.HnGWi::before {
  content: '\\27';
}

.HnGWi::after {
  content: '\\27';
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={undefined}
>
  <div
    className="sc-htpNat ghHrsA"
    onClick={[Function]}
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      properties
    </span>
    <summary
      className="sc-ifAKCX gaIEnP"
    >
      map&lt;string, string&gt;
    </summary>
  </div>
  <div
    className="sc-bxivhb dJnrFt"
  >
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          foo
        </span>
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          bar
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-bZQynM iOQEqP"
        >
          baz
        </span>
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          qux
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Property renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.HnGWi {
  color: #F2A83F;
}

.HnGWi::before {
  content: '\\27';
}

.HnGWi::after {
  content: '\\27';
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
>
  <div
    className="sc-bwzfXH hRiJmB"
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      foo
    </span>
    <span
      className="sc-EHOje HnGWi"
      type="string"
    >
      bar
    </span>
  </div>
</div>
`;

exports[`PropertyName renders correctly 1`] = `
.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<span
  className="sc-bZQynM iOQEqP"
>
  foo
</span>
`;

exports[`Roles renders correctly 1`] = `
.jQbgOF {
  margin-left: 20px;
  min-width: 400px;
  background: none;
}

.hRiJmB {
  min-height: 29px;
}

.hRiJmB::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA {
  min-height: 29px;
  cursor: pointer;
}

.ghHrsA::before {
  content: '';
  width: 15px;
  display: inline-block;
}

.ghHrsA::before {
  content: '-';
  color: #F2A83F;
}

.ghHrsA:hover > span {
  border-bottom: 1px dashed #B1B1B1;
}

.dJnrFt {
  display: block;
  border-left: 1px solid #dad7d0;
  margin-left: 4px;
}

.gaIEnP {
  display: inline;
  font-family: Hack, monospace;
  color: #B1B1B1;
}

.HnGWi {
  color: #F2A83F;
}

.HnGWi::before {
  content: '\\27';
}

.HnGWi::after {
  content: '\\27';
}

.iOQEqP {
  margin-right: 5px;
}

.iOQEqP::after {
  content: ':';
  color: #B1B1B1;
}

<div
  className="sc-bdVaJa jQbgOF"
  onMouseMove={undefined}
>
  <div
    className="sc-htpNat ghHrsA"
    onClick={[Function]}
  >
    <span
      className="sc-bZQynM iOQEqP"
    >
      roles
    </span>
    <summary
      className="sc-ifAKCX gaIEnP"
    >
      []Role
    </summary>
  </div>
  <div
    className="sc-bxivhb dJnrFt"
  >
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          a
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          b
        </span>
      </div>
    </div>
    <div
      className="sc-bdVaJa jQbgOF"
    >
      <div
        className="sc-bwzfXH hRiJmB"
      >
        <span
          className="sc-EHOje HnGWi"
          type="string"
        >
          c
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Value should render correctly with value 1`] = `
.eTqdey {
  color: #EB7422;
}

.eTqdey::before {
  content: ;
}

.eTqdey::after {
  content: ;
}

<span
  className="sc-EHOje eTqdey"
  type="number"
>
  1
</span>
`;
